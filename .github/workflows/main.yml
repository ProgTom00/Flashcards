name: Deploy to Cloudflare Pages

on:
  # Trigger na push do main
  push:
    branches: [ main ]
  # Trigger for pull requests
  pull_request:
    branches: [ main ]
  # Trigger manualny
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test

  deploy:
    name: Deploy to Cloudflare Pages
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    environment:
      name: production
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_PUBLIC_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: flashcards
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          wranglerVersion: '3'

  status-comment:
    name: Post Status Comment
    needs: [deploy]
    if: always() && (github.event_name == 'pull_request' || github.event_name == 'push')
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow status
        id: check
        if: ${{ needs.deploy.result == 'success' }}
        run: echo "status=success" >> $GITHUB_OUTPUT

      - name: Create success comment
        if: ${{ steps.check.outputs.status == 'success' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ **Deployment successful!**

                - ✓ Linting: Passed
                - ✓ Unit Tests: Passed
                - ✓ Deployment: Completed
                
                The application has been successfully deployed to Cloudflare Pages.
                `
              });
            } catch (error) {
              console.log('Failed to create comment:', error);
            }

      - name: Create failure comment
        if: ${{ steps.check.outputs.status != 'success' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `⚠️ **Deployment failed!**

                Please check the workflow logs for more details.
                `
              });
            } catch (error) {
              console.log('Failed to create comment:', error);
            }
