import type { Database } from "./db/database.types";

// Define flashcard source types for creation and update commands
export type FlashcardCreateSource = "ai-full" | "ai-edited" | "manual";
export type FlashcardUpdateSource = "ai-edited" | "manual";

// Types representing the full database rows for each table
export type Flashcard = Database["public"]["Tables"]["flashcards"]["Row"];
export type Generation = Database["public"]["Tables"]["generations"]["Row"];
export type GenerationLogs = Database["public"]["Tables"]["generation_logs"]["Row"];

// DTO representing a flashcard for API responses (GET /api/flashcards)
// Selected columns: id, front, back, source, generation_id, created_at
export type FlashcardDTO = Pick<Flashcard, "id" | "front" | "back" | "source" | "generation_id" | "created_at">;

// Command model for creating a flashcard (POST /api/flashcards)
export interface CreateFlashcardDto {
  front: string;
  back: string;
  source: FlashcardCreateSource;
  generation_id?: string | null; // null for manual entries
}

export interface CreateFlashcards {
  flashcards: CreateFlashcardDto[];
}

// Command model for updating a flashcard (PUT /api/flashcards/{id}) using Partial
export type UpdateFlashcardCommand = Partial<{
  front: string;
  back: string;
  source: FlashcardUpdateSource;
  generation_id: string | null;
}>;

// Generic pagination DTO used in list responses
export interface PaginationDTO {
  page: number;
  limit: number;
  total_pages: number;
  total_items: number;
}

// API response DTO for flashcards (GET /api/flashcards)
export interface FlashcardsResponseDTO {
  data: FlashcardDTO[];
  pagination: PaginationDTO;
}

// DTO representing a generation session, mapped from the database table "generations"
export type GenerationDTO = Generation;

// API response DTO for generation sessions (GET /api/generations)
export interface GenerationsResponseDTO {
  data: GenerationDTO[];
  pagination: PaginationDTO;
}

// DTO representing a generation log for API responses (GET /api/generation-logs)
// Selected columns: id, created_at, error_code, error_message, model, source_text_hash, source_text_length, user_id
export type GenerationLogDTO = Pick<
  GenerationLogs,
  "id" | "created_at" | "error_code" | "error_message" | "model" | "source_text_hash" | "source_text_length" | "user_id"
>;

// API response DTO for generation logs (GET /api/generation-logs)
export interface GenerationLogsResponseDTO {
  data: GenerationLogDTO[];
  pagination: PaginationDTO;
}

// Command model for generating flashcard suggestions (POST /api/generate)
export interface GenerateFlashcardsCommand {
  text: string;
}

// DTO representing a flashcard suggestion generated by AI
export interface FlashcardSuggestionDTO {
  front: string;
  back: string;
  source: "ai-full"; // generated suggestions have source "ai-full"
}

// API response DTO for flashcard generation (POST /api/generate)
export interface GenerateFlashcardsResponseDTO {
  generation_id: string;
  data: FlashcardSuggestionDTO[];
  generated_count: number;
}
